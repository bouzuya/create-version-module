module Formatters
  ( format
  ) where

import Prelude

import Data.Array as Array
import Data.Newtype as Newtype
import Partial.Unsafe as Unsafe
import Version (Version)

format :: Boolean -> String -> Version -> String
format noComment "JavaScript" version =
  Array.intercalate
    "\n"
    ( (if noComment
        then []
        else ["// Generated by @bouzuya/create-version-module"]) <>
      [ "const version = '" <> (Newtype.unwrap version) <> "';"
      , "export { version };"
      , ""
      ])
format noComment "TypeScript" version = format noComment "JavaScript" version
format noComment "PureScript" version =
  Array.intercalate
    "\n"
    ( (if noComment
        then []
        else ["-- Generated by @bouzuya/create-version-module"]) <>
      [ "module Version"
      , "  ( version"
      , "  ) where"
      , ""
      , "version :: String"
      , "version = \"" <> (Newtype.unwrap version) <> "\""
      , ""
      ])
format _ _ _ = Unsafe.unsafeCrashWith "invalid Language"
